name: Deploy App

on:
  # Run this workflow from other workflows
  workflow_call:
    inputs:
      app_name:
        description: 'Name of app to get current k8s deployment'
        required: true
        type: string
      commit_id:
        description: 'HEAD commit hash'
        required: true
        type: string
      environment:
        description: 'environment to affect'
        required: true
        type: string
      deploy_check:
        description: 'Check current deployment?'
        required: false
        default: true
        type: boolean
      repo_name:
        description: 'Name of app repo for Docker image'
        required: false
        default: ''
        type: string
    secrets:
      creds:
        required: true

jobs:
  deploy_app:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set the target AKS cluster
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.creds }}'
        cluster-name: microservices
        resource-group: kubernetes

    - name: Get current deploy
      if: ${{ inputs.deploy_check }}
      run: |
        echo "DEPLOYED_IMAGE_TAG=$(kubectl get deployment ${{ inputs.app_name }}-${{ inputs.environment }}-app -o=jsonpath='{$.spec.template.spec.containers[:1].image}' | cut -d':' -f 2)" >> $GITHUB_ENV

    - name: Check if deploy is necessary
      if: ${{ inputs.deploy_check }}
      run: |
        if [ $DEPLOYED_IMAGE_TAG == ${{ inputs.commit_id }} ]; then
          echo "::warning::Deployed image matches latest commit, no new code to deploy. "
          exit 1
        fi

    - name: Modify & apply template
      run: |
        sed "s/__IMAGE_TAG__/${{ inputs.commit_id }}/g" ./kubernetes/deployment-${{ inputs.environment }}.tmpl \
          | kubectl apply -f -
